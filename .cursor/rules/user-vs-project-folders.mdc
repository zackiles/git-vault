---
description:
globs:
alwaysApply: false
---
# Git-Vault: Development vs. End-user Installed Structure

This rule clarifies the directory structure of the `git-vault` project during **local development** versus how `git-vault`'s files are organized when **installed into a user's repository**. Understanding this distinction is crucial for developers working on `git-vault` itself.

## 1. Local Development (This Repository)

When you are developing `git-vault` (i.e., working within *this* `git-vault` Git repository), all core scripts and new helper scripts are located at the **root of the project**.

**Example Structure (Local Development):**

```
git-vault/  <-- This project (local development, doesn't start with a period)
├── add.sh
├── decrypt.sh
├── encrypt.sh
├── install.sh
├── remove.sh
├── README.md
├── docs/
│   ...
├── test/
└── .cursor/
    └── rules/
        └── development-vs-installed-structure.mdc <--- This Cursor rule
```

**Purpose:** This is the environment where you write, test, and modify the `git-vault` scripts themselves.

## 2. User-Installed Git-Vault (In a User's Repository)

When a user runs the `install.sh` script in *their own* Git repository, the `git-vault` scripts are copied into a `.git-vault/` directory within *their* project. The `1password-helpers.sh` file (and other helper scripts) would also reside inside this `.git-vault/` directory in the user's project after installation.

**Example Structure (User's Repository after `install.sh`):**

```
user-project/
├── .git/
├── .git-vault/             <-- Git-Vault is installed here
│   ├── add.sh
│   ├── decrypt.sh
│   ├── encrypt.sh
│   ├── install.sh          <-- (install.sh itself isn't usually copied here, but its components are)
│   ├── remove.sh
│   ├── paths.list
│   ├── ...
│   └── storage/
│       └── ... (encrypted archives)
├── their-project-file1.txt
└── their-project-file2.js
```

**Purpose:** This is the structure a user interacts with when using `git-vault` to manage their sensitive files. The `install.sh` script sets up this `.git-vault/` directory and its contents.

**Key Takeaway for Developers:**

*   When adding or modifying scripts for `git-vault` **within this development repository**, place them at the **project root**.
*   The `install.sh` script is responsible for copying these root-level scripts into the user's `.git-vault/` directory during the installation process.
*   The file paths mentioned in implementation plans (like `docs/1password-checklist.md`) often describe the *target structure in the user's repository after installation*. Be mindful of this when creating new files during local development.
